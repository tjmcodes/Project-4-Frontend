[{"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/index.js":"1","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/App.js":"2","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/AllVenues.js":"3","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistLogin.js":"4","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/StartJourney.js":"5","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/AllArtists.js":"6","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/LandingPage.js":"7","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueLogin.js":"8","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ShowVenue.js":"9","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ShowArtist.js":"10","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistRegister.js":"11","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueRegister.js":"12","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistStart.js":"13","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueStart.js":"14"},{"size":255,"mtime":1659983276776,"results":"15","hashOfConfig":"16"},{"size":1500,"mtime":1660007803098,"results":"17","hashOfConfig":"16"},{"size":919,"mtime":1659791536330,"results":"18","hashOfConfig":"16"},{"size":2708,"mtime":1659793201521,"results":"19","hashOfConfig":"16"},{"size":343,"mtime":1659891825189,"results":"20","hashOfConfig":"16"},{"size":920,"mtime":1659803800836,"results":"21","hashOfConfig":"16"},{"size":74780,"mtime":1659905932449,"results":"22","hashOfConfig":"16"},{"size":3068,"mtime":1659877247160,"results":"23","hashOfConfig":"16"},{"size":52837,"mtime":1660053957028,"results":"24","hashOfConfig":"16"},{"size":48771,"mtime":1660051823358,"results":"25","hashOfConfig":"16"},{"size":15907,"mtime":1659977996137,"results":"26","hashOfConfig":"16"},{"size":16749,"mtime":1659978179744,"results":"27","hashOfConfig":"16"},{"size":0,"mtime":1659888526785,"results":"28","hashOfConfig":"16"},{"size":0,"mtime":1659888846500,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"zcw9wi",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/index.js",[],[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/App.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/AllVenues.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistLogin.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/StartJourney.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/AllArtists.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/LandingPage.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueLogin.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ShowVenue.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ShowArtist.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistRegister.js",["75"],[],"import React, { useState } from \"react\";\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport styles from \"./ArtistRegister.module.css\"\n\nfunction ArtistRegister() {\n\n  const [Q1, setQ1] = React.useState(true)\n  const [Q2, setQ2] = React.useState(false)\n  const [Q3, setQ3] = React.useState(false)\n  const [Q4, setQ4] = React.useState(false)\n  const [Q5, setQ5] = React.useState(false)\n  const [Q6, setQ6] = React.useState(false)\n  const [Q7, setQ7] = React.useState(false)\n  const [Q8, setQ8] = React.useState(false)\n  const [Q9, setQ9] = React.useState(false)\n  \n  \n  const [proccedlogin, setproccedlogin] = React.useState(false)\n  // const [addanother1, setaddanother1] = React.useState(false)\n  const [button, updateButton] = useState(false)\n  const navigate = useNavigate()\n\n  const progressBar = document.getElementById(\"progress\")\n  \n  const [formData, setFormData] = useState({\n    username: \"\",\n    email:  \"\" , \n    artistName: \"\",\n    password: \"\",\n    profileImage: \"\",\n    location: \"\",\n    travel: \"\",\n    totalRatings: \"\",\n    price: \"\",\n    websiteUrl: \"\",\n    videoUrl: \"\",\n    optionUrl: \"\",\n    musicUrl: \"\",\n    backgroundCoverCardImage: \"\",\n    galleryImage1: \"\",\n    galleryImage2: \"\",\n    galleryImage3: \"\",\n    bio: \"\",\n    fbUrl: \"\",\n    twitterUrl: \"\",\n    youTubeUrl: \"\",\n    instagramUrl:\"\",\n    genre: \"\"\n  })\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email:  \"\" , \n    artistName: \"\",\n    profileImage: \"\",\n    location: \"\",\n    travel: \"\",\n    totalRatings: \"\",\n    price: \"\",\n    websiteUrl: \"\",\n    videoUrl: \"\",\n    optionUrl: \"\",\n    musicUrl: \"\",\n    backgroundCoverCardImage: \"\",\n    galleryImage1: \"\",\n    galleryImage2: \"\",\n    galleryImage3: \"\",\n    bio: \"\",\n    fbUrl: \"\",\n    twitterUrl: \"\",\n    youTubeUrl: \"\",\n    instagramUrl:\"\",\n    genre: \"\"\n  })\n\n\n  // Cloudinary \n  // form submission\n  // Genre\n  //field validation\n  // errors \n  // rendering \n\n\n  function handleChange(e) {\n    console.log(e.target.value)\n    const { name, value } = e.target\n    setFormData({\n      ...formData, //  This is whatever the form data was before, all it's fields.\n      [name]: value, \n    })\n    setErrors({\n      ...errors,\n      [name]: '',\n    })\n    console.log(name)\n  }\n\n  function handleProfileUpload() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'tjmcodes', \n        uploadPreset: 'artist-user-profile', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          profileImage: result.info.url,\n        })\n      }\n      ).open()\n    }\n    console.log(formData)\n    \n  function handleBackgroundUpload() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'tjmcodes', \n        uploadPreset: 'artist-background-card-image', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          backgroundCoverCardImage: result.info.url,\n        })\n      }\n      ).open()\n    }\n    console.log(formData)\n  function handleGalleryUpload1() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'tjmcodes', \n        uploadPreset: 'artist-gallery-images', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          galleryImage1: result.info.url,\n        })\n      }\n      ).open()\n    }\n    console.log(formData)\n  function handleGalleryUpload2() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'tjmcodes', \n        uploadPreset: 'artist-gallery-images', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          galleryImage2: result.info.url,\n        })\n      }\n      ).open()\n    }\n    console.log(formData)\n\n  function handleGalleryUpload3() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'tjmcodes', \n        uploadPreset: 'artist-gallery-images', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          galleryImage3: result.info.url,\n        })\n      }\n      ).open()\n    }\n    console.log(formData)\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    try {\n      await axios.post(`/api/artist-signup`, formData)\n      updateButton(!button)\n      navigate('/artist-login')\n    } catch (err) {    \n      setErrors(err.response.data.errors)\n    }\n  }\n  \n    \n  function postQ1() {\n    setQ1(false)\n    setQ2(true)\n    const newCountVal = 10\n    progressBar.value = newCountVal\n  }\n\n  function postQ2() {\n    console.log(\"clicked\")\n    setQ2(false)\n    setQ3(true)\n    const newCountVal = 20\n    progressBar.value = newCountVal\n  }\n\n  function postQ3() {\n    console.log(\"clicked\")\n    setQ3(false)\n    setQ4(true)\n    const newCountVal = 30    \n    progressBar.value = newCountVal\n  }\n  function postQ4() {\n    console.log(\"clicked\")\n    setQ4(false)\n    setQ5(true)\n    const newCountVal = 40  \n    progressBar.value = newCountVal\n  }\n\n  function postQ5() {\n    console.log(\"clicked\")\n    setQ5(false)\n    setQ6(true)\n    const newCountVal = 50\n    progressBar.value = newCountVal\n  }\n  function postQ6() {\n    console.log(\"clicked\")\n    setQ6(false)\n    setQ7(true)\n    const newCountVal = 60\n    progressBar.value = newCountVal\n  }\n  function postQ7() {\n    console.log(\"clicked\")\n    setQ7(false)\n    setQ8(true)\n    const newCountVal = 70\n    progressBar.value = newCountVal\n  }\n  function postQ8() {\n    console.log(\"clicked\")\n    setQ8(false)\n    setQ9(true)\n    const newCountVal = 80\n    progressBar.value = newCountVal\n  }\n  function postQ9() {\n    console.log(\"clicked\")\n    setQ9(false)\n    setproccedlogin(true)\n    const newCountVal = 90\n    progressBar.value = newCountVal\n  }\n  // function addanother() {\n  //   setaddanother1(true)\n  // } \n  return (\n    <>\n      <progress id=\"progress\" className={styles.formprogress} value=\"0\" max=\"100\"></progress>\n      \n      {Q1 ? <>\n        <h2 className={styles.titlebanner}>To get started lets setup your login credentials</h2>\n        <div className={styles.questionbox}>\n          <div>\n            <h3 className={styles.h3}>Enter your Email address</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"email\"\n            value={formData.email} \n            placeholder=\"examaple@example.com\">\n          </input>\n          \n          <div>\n            <h3 className={styles.h3}>Choose a Username</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Enter your name\"\n            name=\"username\"\n            value={formData.username}> \n          </input>\n                    \n          <div>\n            <h3 className={styles.h3}>Choose a password</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Enter your password\"\n            name=\"password\"\n            value={formData.password}>\n            </input>\n          <div>\n            <h3 className={styles.h3}>Please upload a profile image by clicking on the button below</h3>\n          </div>\n          <button onClick={handleProfileUpload} className={styles.nextbutton}>upload profile picture</button>{\n            formData.profileImage === \"\" ? null : <img src={formData.profileImage} alt=\"profile image\"></img>\n          }           \n          <button onClick={postQ1} className={styles.nextbutton}>{`Next -> `}</button>\n        </div>\n        </> : null }\n\n      {Q2 ? <>\n      <div className={styles.questionbox}>\n        <div className={styles.titlebanner}>\n          <h3 className={styles.h3}>Where are you located?</h3>\n        </div>\n        <select className={styles.optionInput} name=\"location\" value={formData.location} onChange={handleChange} id=\"cities\">\n          <option value=\"london\">London</option>\n          <option value=\"manchester\">Manchester</option>\n          <option value=\"birmingham\">Birmingham</option>\n          <option value=\"leeds\">Leeds</option>\n          <option value=\"Liverpool\">Liverpool</option>\n        </select>\n        <button onClick={postQ2} className={styles.nextbutton}>{`Next -> `}</button>\n      </div></> : null }\n\n      {Q3 ? <>\n        <div className={styles.questionbox}>\n          \n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>How far are you willing to travel?</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"number\" \n            placeholder=\"Enter maximum distance in miles (Number only)\"\n            name=\"travel\" \n            value={formData.travel}\n          />\n          <button onClick={postQ3} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n\n      {Q4 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>What is your website address?</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Enter your website address (url)\"\n            name=\"websiteUrl\" \n            value={formData.websiteUrl}\n          />\n          <button onClick={postQ4} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n      \n      {Q5 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Upload a link to you performing live</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Upload your link\"\n            name=\"videoUrl\" \n            value={formData.videoUrl}\n          />\n         \n          <button onClick={postQ5} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n      \n      {Q6 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Where can we listen to your music?</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Upload the link to your music (Spotify / Bandcamp etc.)\"\n            name=\"musicUrl\" \n            value={formData.musicUrl}\n          />\n          <button onClick={postQ6} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n      \n      {Q7 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Show Potential Venues what you are like</h3>\n            <p> add a background cover image and up to three gallery images below</p>\n          </div>\n\n          <button onClick={handleBackgroundUpload} className={styles.nextbutton}>upload background cover image</button>            \n          <button onClick={handleGalleryUpload1} className={styles.nextbutton}>upload gallery image</button>            \n          <button onClick={handleGalleryUpload2} className={styles.nextbutton}>upload gallery image</button>            \n          <button onClick={handleGalleryUpload3} className={styles.nextbutton}>upload gallery image</button>            \n\n          <button onClick={postQ7} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n    \n      {Q8 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>What is your Artist Name?</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Enter your artist name\"\n            name=\"artistName\" \n            value={formData.artistName}\n          />\n          \n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Add your bio</h3>\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"Enter your bio info here\"\n            name=\"bio\" \n            value={formData.bio}\n          />\n          \n          <button onClick={postQ8} className={styles.nextbutton}>{`Next -> `}</button>\n        </div></> : null }\n     \n      {Q9 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Lifes better when you share! add your social media accounts below</h3>\n          </div>\n          <input \n            placeholder=\"Facebook (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"fbUrl\" \n            value={formData.fbUrl}\n          />\n          <input \n            placeholder=\"Twitter (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"twitterUrl\" \n            value={formData.twitterUrl}\n          />\n          <input \n            placeholder=\"YouTube (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"youTubeUrl\" \n            value={formData.youTubeUrl}\n          />\n          <input \n            placeholder=\"Instagram (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"instagramUrl\" \n            value={formData.instagramUrl}\n          />\n          <button onClick={postQ9} className={styles.nextbutton}>{`Submit Form -> `}</button>\n        </div></> : null }\n   \n\n      {proccedlogin ? <>\n        <div className={styles.proccedlogin}>\n          <div className={styles.logintext}>\n            <h3 className={styles.h3login}>You are now Registered!</h3>\n            <h4 className={styles.h4login}>Welcome to our talented family</h4>\n            <button onClick={handleSubmit} className={styles.loginbutton}>Click to proceed to login</button>\n          </div>\n        </div></> : null }\n    </>\n  )\n}\n\nexport default ArtistRegister","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueRegister.js",["76","77","78"],[],"import React, { useState } from \"react\";\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport styles from \"./VenueRegister.module.css\"\n\nfunction VenueRegister() {\n  \n  const [Q1, setQ1] = React.useState(true)\n  const [Q2, setQ2] = React.useState(false)\n  const [Q3, setQ3] = React.useState(false)\n  const [Q4, setQ4] = React.useState(false)\n  const [Q5, setQ5] = React.useState(false)\n  const [Q6, setQ6] = React.useState(false)\n  const [Q7, setQ7] = React.useState(false)\n  const [Q8, setQ8] = React.useState(false)\n  const [Q9, setQ9] = React.useState(false)\n\n  const [proccedlogin, setproccedlogin] = React.useState(false)\n  const [addanother1, setaddanother1] = React.useState(false)\n  const [button, updateButton] = useState(false)\n  const navigate = useNavigate()\n\n  const progressBar = document.getElementById(\"progress\")\n  \n  const [formData, setFormData] = useState({\n    email:\"\", //\n    username:\"\", //\n    password: \"\",//\n    profileImage:\"\", //\n    title:\"\", //\n    role:\"\", // \n    venueName: \"\", //\n    type: \"\",\n    // venueImage: \"\", \n    location: \"\", //\n    address:\"\", //\n    budget:\"\",\n    websiteUrl:\"\",\n    // videoUrl:\"\",\n    // optionUrl:\"\",\n    backgroundCardImage:\"\", //\n    galleryImage1:\"\", //\n    galleryImage2: \"\", //\n    galleryImage3: \"\", //\n    description: \"\", //\n    fbUrl: \"\", //\n    twitterUrl:\"\", //\n    youTubeUrl: \"\", //\n    instagramUrl: \"\", //\n  })\n\n\n  const [errors, setErrors] = useState({\n    email:\"\",\n    username:\"\",\n    profileImage:\"\",\n    title:\"\",\n    role:\"\",\n    venueName: \"\",\n    type: \"\",\n    venueImage: \"\",\n    location: \"\",\n    address:\"\",\n    budget:\"\",\n    websiteUrl:\"\",\n    videoUrl:\"\",\n    optionUrl:\"\",\n    backgroundCardImage:\"\",\n    galleryImage1:\"\",\n    galleryImage2: \"\",\n    galleryImage3: \"\",\n    description: \"\",\n    fbUrl: \"\",\n    twitterUrl:\"\",\n    youTubeUrl: \"\",\n    instagramUrl: \"\",\n  })\n\n\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    try {\n      await axios.post(`/venue-signup`, formData)\n      updateButton(!button)\n      navigate('/venue-login')\n    } catch (err) {    \n      setErrors(err.response.data.errors)\n    }\n  }\n  function handleChange(e) {\n    console.log(e.target.value)\n    const { name, value } = e.target\n    setFormData({\n      ...formData, //  This is whatever the form data was before, all it's fields.\n      [name]: value, \n    })\n    setErrors({\n      ...errors,\n      [name]: '',\n    })\n    console.log(name)\n  }\n\n  function handleProfileUpload() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'dgk61wxpy', \n        uploadPreset: 'Venue-user-profile', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          profileImage: result.info.url,\n        })\n      }\n      ).open()\n    }\n    \n  function handleBackgroundUpload() {\n    window.cloudinary.createUploadWidget(\n      {\n        cloudName: 'dgk61wxpy', \n        uploadPreset: 'venue-background-card-image', \n        folder: 'VenuesArtists',\n        cropping: true,\n        placeholderImage: true,\n        clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n        maxFileSize: 1048576, \n      },\n      (err, result) => {\n        if (result.event !== 'success') {\n          return\n        }\n        setFormData({\n          ...formData,\n          backgroundCardImage: result.info.url,\n        })\n      }\n      ).open()\n    }\n\n\n\nfunction handleGalleryUpload1() {\n  window.cloudinary.createUploadWidget(\n    {\n      cloudName: 'dgk61wxpy', \n      uploadPreset: 'venue-gallery-images', \n      folder: 'VenuesArtists',\n      cropping: true,\n      placeholderImage: true,\n      clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n      maxFileSize: 1048576, \n    },\n    (err, result) => {\n      if (result.event !== 'success') {\n        return\n      }\n      setFormData({\n        ...formData,\n        galleryImage1: result.info.url,\n      })\n    }\n    ).open()\n  }\n\nfunction handleGalleryUpload2() {\n  window.cloudinary.createUploadWidget(\n    {\n      cloudName: 'dgk61wxpy', \n      uploadPreset: 'venue-gallery-images', \n      folder: 'VenuesArtists',\n      cropping: true,\n      placeholderImage: true,\n      clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n      maxFileSize: 1048576, \n    },\n    (err, result) => {\n      if (result.event !== 'success') {\n        return\n      }\n      setFormData({\n        ...formData,\n        galleryImage2: result.info.url,\n      })\n    }\n    ).open()\n  }\n\nfunction handleGalleryUpload3() {\n  window.cloudinary.createUploadWidget(\n    {\n      cloudName: 'dgk61wxpy', \n      uploadPreset: 'venue-gallery-images', \n      folder: 'VenuesArtists',\n      cropping: true,\n      placeholderImage: true,\n      clientAllowedFormats: ['JPG', 'PNG', 'GIF', 'BMP', 'TIFF', 'ICO', 'PDF', 'EPS', 'PSD', 'SVG', 'WebP', 'JXR', 'WDP'],\n      maxFileSize: 1048576, \n    },\n    (err, result) => {\n      if (result.event !== 'success') {\n        return\n      }\n      setFormData({\n        ...formData,\n        galleryImage3: result.info.url,\n      })\n    }\n    ).open()\n  }\n\n\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    try {\n      await axios.post(`/venue-signup`, formData)\n      updateButton(!button)\n      navigate('/venue-login')\n    } catch (err) {    \n      setErrors(err.response.data.errors)\n    }\n  }\n \n    \n  function postQ1() {\n    setQ1(false)\n    setQ2(true)\n    const newCountVal = 20\n    progressBar.value = newCountVal\n  }\n\n  function postQ2() {\n    console.log(\"clicked\")\n    setQ2(false)\n    setQ3(true)\n    const newCountVal = 30\n    progressBar.value = newCountVal\n  }\n\n  function postQ3() {\n    console.log(\"clicked\")\n    setQ3(false)\n    setQ4(true)\n    const newCountVal = 40\n    progressBar.value = newCountVal\n  }\n  function postQ4() {\n    console.log(\"clicked\")\n    setQ4(false)\n    setQ5(true)\n    const newCountVal = 50\n    progressBar.value = newCountVal\n  }\n\n  function postQ5() {\n    console.log(\"clicked\")\n    setQ5(false)\n    setQ6(true)\n    const newCountVal = 60\n    progressBar.value = newCountVal\n  }\n  function postQ6() {\n    console.log(\"clicked\")\n    setQ6(false)\n    setQ7(true)\n    const newCountVal = 70\n    progressBar.value = newCountVal\n  }\n  function postQ7() {\n    console.log(\"clicked\")\n    setQ7(false)\n    setQ8(true)\n    const newCountVal = 80\n    progressBar.value = newCountVal\n  }\n  function postQ8() {\n    console.log(\"clicked\")\n    setQ8(false)\n    setQ9(true)\n    const newCountVal = 90\n    progressBar.value = newCountVal\n  }\n  function postQ9() {\n    console.log(\"clicked\")\n    setQ9(false)\n    setproccedlogin(true)\n    const newCountVal = 100\n    progressBar.value = newCountVal\n  }\n\n  function addanother() {\n    setaddanother1(true)\n  } \n\n return (\n  <>\n  <progress id=\"progress\" className={styles.formprogress} value=\"0\" max=\"100\"></progress>\n  {Q1 ? <>\n    <h2 className={styles.titlebanner}>To get started lets setup your login credentials</h2>\n    <div className={styles.questionbox}>\n      <div >\n        <h3 className={styles.h3}>Enter your Email address</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        name={'email'}\n        value={formData.email}\n        placeholder=\"examaple@example.com\">\n      </input>\n      <div>\n        <h3 className={styles.h3}>Choose a Username</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"Enter your name\"\n        name={'username'}\n        value={formData.username}>\n      </input>\n      \n      <div>\n        <h3 className={styles.h3}>Choose a password</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"Enter your password\"\n        name={'password'}\n        value={formData.password}>\n      </input>\n      \n      <div>\n        <h3 className={styles.h3}>Please upload a profile image by clicking on the button below</h3>\n      </div>\n      <button onClick={handleProfileUpload} className={styles.nextbutton}>upload profile picture</button>{\n        formData.profileImage === \"\" ? null : <img src={formData.profileImage} alt=\"profile image\"></img>\n      }\n      <button onClick={postQ1} className={styles.nextbutton}>{`Next -> `}</button>\n    </div>\n    </> : null }\n\n  {Q2 ? <>\n  <h2 className={styles.titlebanner}>Now a couple of details about you</h2>\n  <div className={styles.questionbox}>\n    <div>\n      <h3 className={styles.h3}>What is your name? (This will be displayed on our site)</h3>\n    </div>\n    <input \n      onChange={handleChange} \n      className={styles.textinput} \n      type=\"text\" \n      placeholder=\"Enter your Name\"   \n      name={'title'}\n      value={formData.title}>\n    </input>\n    <div>\n      <h3 className={styles.h3}>What is your Job title</h3>\n    </div>\n    <input \n      onChange={handleChange} \n      className={styles.textinput} \n      type=\"text\" \n      placeholder=\"eg. Assistant Manager, Owner\"\n      name={'role'}\n      value={formData.role}>\n    </input>\n    <button onClick={postQ2} className={styles.nextbutton}>{`Next -> `}</button>\n  </div></> : null }\n  \n  {Q3 ? <>\n    <div className={styles.questionbox}>\n      <div className={styles.titlebanner}>\n        <h3 className={styles.h3}>What is the Name of your Venue?</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"eg. The windmill\"\n        name={'venueName'}\n        value={formData.venueName}>\n      </input>\n      <button onClick={postQ3} className={styles.nextbutton}>{`Next -> `}</button>\n    </div></> : null }\n  \n  {Q4 ? <>\n    <div className={styles.questionbox}>\n      <div className={styles.titlebanner}>\n        <h3 className={styles.h3}>Where is your venue located?</h3>\n      </div>\n      <select \n      className={styles.optionInput} \n      name={'location'}\n      value={formData.location}\n      >\n        <option value=\"london\">London</option>\n        <option value=\"manchester\">Manchester</option>\n        <option value=\"birmingham\">Birmingham</option>\n        <option value=\"leeds\">Leeds</option>\n      </select>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"Enter your street address\"\n        name={'address'}\n        value={formData.address}></input>\n      <button onClick={postQ4} className={styles.nextbutton}>{`Next -> `}</button>\n    </div></> : null }\n    \n    {Q5 ? <>\n    <div className={styles.questionbox}>\n      <div className={styles.titlebanner}>\n        <h3 className={styles.h3}>Write a brief description of your venue</h3>\n        <p className={styles.subheading}>(this will be displayed on your profile)</p>\n      </div>\n      <textarea \n        onChange={handleChange} \n        className={styles.textarea} \n        placeholder=\"Click hear to enter a brief description of your venue\"\n        name={'description'}\n        value={formData.description}\n      ></textarea>\n      <button onClick={postQ5} className={styles.nextbutton}>{`Next -> `}</button>\n    </div></> : null }\n  \n  {Q6 ? <>\n    <h2 className={styles.titlebanner}></h2>\n    <div className={styles.questionbox}>\n      <div>\n        <h3 className={styles.h3}>What is your website?</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"Enter your website URL\"   \n        name={'websiteUrl'}\n        value={formData.websiteUrl}>\n      </input>\n      <div>\n        <h3 className={styles.h3}>what is your budget for performers(£)</h3>\n      </div>\n      <input \n        onChange={handleChange} \n        className={styles.textinput} \n        type=\"text\" \n        placeholder=\"100\"\n        name={'budget'}\n        value={formData.budget}>\n      </input>\n      <button onClick={postQ6} className={styles.nextbutton}>{`Next -> `}</button>\n    </div></> : null }\n\n  { Q7 ? <>\n  <div className={styles.questionbox}>\n      <div className={styles.titlebanner}>\n        <h3 className={styles.h3}>Show Potential Artists what your venue is like</h3>\n        <p className={styles.subheading}> add a background cover image and up to three gallery images below</p>\n      </div>\n                \n      <button onClick={handleBackgroundUpload} className={styles.nextbutton}>upload background cover image</button>            \n      <button onClick={handleGalleryUpload1} className={styles.nextbutton}>upload gallery image</button>            \n      <button onClick={handleGalleryUpload2} className={styles.nextbutton}>upload gallery image</button>            \n      <button onClick={handleGalleryUpload3} className={styles.nextbutton}>upload gallery image</button>            \n\n      <button onClick={postQ7} className={styles.nextbutton}>{`Next -> `}</button>\n\n    </div></> : null}\n\n  {Q8 ? <>\n    <div className={styles.questionbox}>\n      <div className={styles.titlebanner}>\n        <h3 className={styles.h3}>Lifes better when you share! add your social media accounts below</h3>\n      </div>\n      <input \n            placeholder=\"Facebook (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"fbUrl\" \n            value={formData.fbUrl}\n          />\n          <input \n            placeholder=\"Twitter (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"twitterUrl\" \n            value={formData.twitterUrl}\n          />\n          <input \n            placeholder=\"YouTube (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"youTubeUrl\" \n            value={formData.youTubeUrl}\n          />\n          <input \n            placeholder=\"Instagram (optional)\"\n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            name=\"instagramUrl\" \n            value={formData.instagramUrl}\n          />\n      {/* { addanother1 ? null : <button onClick={addanother}className={styles.addanotherbutton }>add another + </button>}\n      {addanother1 && <><input onChange={handleChange} className={styles.textinput} type=\"text\" placeholder=\"post the link to another social media account\"></input>\n        <button onClick={addanother}className={styles.addanotherbutton }>add another + </button></>}\n      <button onClick={postQ5} className={styles.nextbutton}>{`Next -> `}</button> */}\n      <button onClick={postQ8} className={styles.nextbutton}>{`Submit Form -> `}</button>\n    </div></> : null }\n  \n    {Q9 ? <>\n        <div className={styles.questionbox}>\n          <div className={styles.titlebanner}>\n            <h3 className={styles.h3}>Type</h3> {/* Genres posting */}\n          </div>\n          <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"enter the type of venue you are\"\n            name=\"type\" \n            value={formData.type}\n          />\n          { addanother1 ? null : <button onClick={addanother}className={styles.addanotherbutton }>add another + </button>}\n          {addanother1 && <>\n            <input \n            onChange={handleChange} \n            className={styles.textinput} \n            type=\"text\" \n            placeholder=\"enter another genre that best suits your music\"\n            name=\"type\" \n            value={formData.type}\n          />\n          <button onClick={addanother}className={styles.addanotherbutton }>add another + </button></>}\n          <button onClick={postQ9} className={styles.nextbutton}>{`Submit Form -> `}</button>\n        </div></> : null }\n\n  \n  \n  {proccedlogin ? <>\n    <div className={styles.proccedlogin}>\n      <div className={styles.logintext}>\n        <h3 className={styles.h3login}>You are now Registered!</h3>\n        <h4 className={styles.h4login}>Welcome to our talented family</h4>\n        <button onClick={handleSubmit} className={styles.loginbutton}>Click to proceed to login</button>\n      </div>\n    </div></> : null }\n</>\n)\n}\n\nexport default VenueRegister","/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/ArtistStart.js",[],[],"/Users/tm/Desktop/GA_coding/PROJECTS/Project-4-Frontend/src/VenueStart.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":344,"column":51,"nodeType":"81","endLine":344,"endColumn":104},{"ruleId":"82","severity":1,"message":"83","line":224,"column":18,"nodeType":"84","messageId":"85","endLine":224,"endColumn":30},{"ruleId":"79","severity":1,"message":"80","line":351,"column":47,"nodeType":"81","endLine":351,"endColumn":100},{"ruleId":"86","severity":1,"message":"87","line":443,"column":5,"nodeType":"81","endLine":443,"endColumn":40},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-redeclare","'handleSubmit' is already defined.","Identifier","redeclared","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader."]